#!/bin/sh
# Daemon for mbim. Restart LTE connection
#
# Thanks "yosh781" from "https://github.com/yosh781/Daemon-modem-watchdog_qmi-for-Openwrt"
# Thanks "@antonk" from "https://forum.openwrt.org/t/create-a-sample-procd-init-script/230977"

#set -x; # show this "https://forum.openwrt.org/t/qmi-ec25-v-verizon-problems/145970"

delay="5"; # idle time between connectivity checks

delay_reconnect="60"; # reconnect time after  "ifdown wan && ifup wan" re-executed script, prevent "race condition"

watchdog_debug_file="/tmp/watchdog/mbim_debug"; # create file for debug script

watchdog_block_file="/tmp/watchdog/mbim_block"; # create file for block script

atcmd_block_file="/tmp/watchdog/atcmd_block"; # block exec atcmd commands

trap "exit 0" INT TERM

lteinterface=$(uci -q get network.wan)
if [ "$lteinterface" != "interface" ]; then
    logger "exec: /root/watchdog_mbim: Interface wan not found in network config"
    exit 0
fi

lteproto=$(uci -q get network.wan.proto)
if [ "$lteproto" != "mbim" ]; then
    logger "exec: /root/watchdog_mbim: WAN interface is not using mbim"
    exit 0
fi

count=0

while true; do

    # add varius scripts
    watchdog_predown_file="/tmp/watchdog/predown_file"; # create file for exec command pre down interface
    watchdog_postdown_file="/tmp/watchdog/postdown_file"; # create file for exec command post down interface
    watchdog_ping_test="/tmp/watchdog/ping_test"; # create file for exec ping test internet connection
    watchdog_ping_pid="/tmp/watchdog/ping_pid"

    count=$((count+1))
    status=$(ubus call service list '{ "name": "watchdog_mbim" }' | grep -c '"running": true')

    # if service is running and this file exists exec: /etc/init.d/watchdog_mbim stop
    if [ "$status" -eq 1 ]; then
        if [ -f "$watchdog_block_file" ]; then
        logger "exec: /root/watchdog_mbim: the file /tmp/watchdog_mbim_block exists; /etc/init.d/watchdog_mbim stop; exit 0"
        /etc/init.d/watchdog_mbim stop; # from "https://forum.openwrt.org/t/start-and-stop-a-service-while-pushing-wps-button/191871/19"
        exit 0
        fi
    else
        if [ -f "$atcmd_block_file" ]; then
        rm "$atcmd_block_file"
        fi
    fi

    if [ ! -d /tmp/watchdog ]; then
        mkdir /tmp/watchdog
    fi

    # theoretically the "uqmi -m -d /dev/cdc-wdm0 -t 20000 --get-data-status" command should respond in:
    # time uqmi -m -d /dev/cdc-wdm0 -t 20000 --get-data-status
    # "connected"
    # real    0m 0.25s
    # user    0m 0.00s
    # sys     0m 0.00s

    ltestatus=$(uqmi -m -d /dev/cdc-wdm0 -t 20000 --get-data-status 2> /dev/null); # return "connected"
    lteerror=$?; # return 0
    ltefind=$(echo "$ltestatus" | grep -c "\"connected\""); # return "1"

    if [ "$ltefind" -eq "0" ] || [ "$lteerror" -ne "0" ] ; then

        # uqmi does not return "connected"
        if [ "$ltefind" -eq "0" ]; then
        if [ -n "$wanuptime" ]; then
        logger "exec: /root/watchdog_mbim: lost connection detected exec ifdown wan; ifup wan count=$count wanuptime=$wanuptime"
        else
        logger "exec: /root/watchdog_mbim: lost connection detected exec ifdown wan; ifup wan count=$count"
        fi
        fi

        # uqmi not response into 20 sec
        if [ "$lteerror" -ne "0" ]; then
        if [ -n "$wanuptime" ]; then
        logger "exec: /root/watchdog_mbim: uqmi not response into 20 sec exec ifdown wan; ifup wan count=$count wanuptime=$wanuptime"
        else
        logger "exec: /root/watchdog_mbim: uqmi not response into 20 sec exec ifdown wan; ifup wan count=$count"
        fi
        fi

        if [ -x "$watchdog_ping_test" ]; then
        logger "exec: $watchdog_ping_test start"
        $watchdog_ping_test &
        fi

        # exec command predown interface
        if [ -x "$watchdog_predown_file" ]; then
        logger "exec: $watchdog_predown_file"
        $watchdog_predown_file
        fi

        # debug mode
        if [ -f "$watchdog_debug_file" ]; then
        logger "exec: /root/watchdog_mbim: debug ltestatus=$ltestatus lteerror=$lteerror ltefind=$ltefind count=$count status=$status"
        fi

        #daemon.err watchdog_mbim[15644]: + ifdown wan
        #daemon.err watchdog_mbim[15644]: Command failed: ubus call network.interface down { "interface" : "wan" } (Request timed out)
        ifdown wan && ifup wan

        touch "$atcmd_block_file"; # block exec atcmd commands
        if [ -f "$watchdog_debug_file" ]; then
        logger "exec: create $atcmd_block_file"
        fi

        sleep "$delay_reconnect"; # sleep prevent "race condition"

        # exec command post down interface
        if [ -x "$watchdog_postdown_file" ]; then
        logger "exec: $watchdog_postdown_file"
        $watchdog_postdown_file
        fi

        if [ -f "$watchdog_debug_file" ]; then
        logger "exec: /root/watchdog_mbim: debug end time delay_reconnec=$delay_reconnect"; # debug mode
        fi

        break
    fi

    # kill ping_test process
    if [ "$count" -eq "30" ] && [ -f "$watchdog_ping_pid" ]; then
        logger "exec: kill $watchdog_ping_test process"
        kill -9 "$(cat $watchdog_ping_pid)"
        rm "$watchdog_ping_pid"
    fi

    # online status
    if [ "$ltefind" -eq "1" ] && [ "$lteerror" -eq "0" ]; then

        # discovers WAN uptime
        if [ -e "/sys/class/net/wwan0/carrier" ]; then
        #wanstatus=$(ubus call network.interface.wan_4 status | grep -c '"up": true')
        wanstatus=$(cat /sys/class/net/wwan0/carrier)
        if [ "$wanstatus" -eq "1" ]; then
        wanuptime=$(ubus call network.interface.wan_4 status | grep 'uptime' | grep -o '[0-9]\+')
        export wanuptime
        fi
        fi

        # debug mode
        if [ -f "$watchdog_debug_file" ]; then
        if [ -n "$wanuptime" ]; then
        logger "exec: /root/watchdog_mbim: debug ltestatus=$ltestatus lteerror=$lteerror ltefind=$ltefind wanuptime=$wanuptime count=$count status=$status delay=$delay"
        else
        logger "exec: /root/watchdog_mbim: debug ltestatus=$ltestatus lteerror=$lteerror ltefind=$ltefind count=$count status=$status delay=$delay"
        fi
        fi

        # remove atcmd_block_file
        if [ -f "$atcmd_block_file" ]; then
        rm "$atcmd_block_file"
                if [ -f "$watchdog_debug_file" ]; then
                logger "exec: delete $atcmd_block_file"
                fi
        fi

    fi

    sleep "$delay"; # idle time between connectivity checks

done

exit 0
